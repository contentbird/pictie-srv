// Generated by CoffeeScript 1.3.3
(function() {

  this.MemoryUsersManager = (function() {

    function MemoryUsersManager() {
      this.users_list = {
        '/meta/subscribe': {}
      };
    }

    MemoryUsersManager.prototype.subscribeUser = function(message) {
      console.log('in subscribe user' + JSON.stringify(message));
      if (this.users_list['/meta/subscribe'] == null) {
        this.users_list['/meta/subscribe'] = {};
      }
      if (!(this.users_list['/meta/subscribe'][message.ext.userId] != null)) {
        this.users_list['/meta/subscribe'][message.ext.userId] = {};
      }
      this.users_list['/meta/subscribe'][message.ext.userId][message.clientId + ''] = {
        pushPlatform: message.ext.pushPlatform,
        pushToken: message.ext.pushToken
      };
      return message;
    };

    MemoryUsersManager.prototype.unsubscribeUser = function(clientId) {
      var key, val, _ref, _results;
      console.log('in unsubscribe user for ' + clientId);
      _ref = this.users_list['/meta/subscribe'];
      _results = [];
      for (key in _ref) {
        val = _ref[key];
        if (this.users_list['/meta/subscribe'][key][clientId + ''] != null) {
          _results.push(delete this.users_list['/meta/subscribe'][key][clientId + '']);
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    MemoryUsersManager.prototype.allUsers = function() {
      return this.users_list['/meta/subscribe'];
    };

    return MemoryUsersManager;

  })();

}).call(this);
