// Generated by CoffeeScript 1.3.3
(function() {

  this.MemoryUsersManager = (function() {

    function MemoryUsersManager() {
      this.users_list = {
        '/meta/subscribe': {}
      };
    }

    MemoryUsersManager.prototype.subscribeUser = function(message) {
      if (this.users_list['/meta/subscribe'] == null) {
        this.users_list['/meta/subscribe'] = {};
      }
      if (this.users_list[message.channel] == null) {
        this.users_list[message.channel] = {};
      }
      this.users_list['/meta/subscribe'][message.clientId + ''] = {
        user_id: message.ext.user_id,
        user_name: message.ext.user_name,
        avatar: message.ext.avatar
      };
      return message;
    };

    MemoryUsersManager.prototype.addUserToChannel = function(clientId, channel) {
      if (this.users_list[channel] == null) {
        this.users_list[channel] = {};
      }
      this.users_list[channel][clientId + ''] = this.users_list['/meta/subscribe'][clientId + ''];
      return this.users_list[channel][clientId + '']['time'] = new Date().getTime();
    };

    MemoryUsersManager.prototype.removeUserFromChannel = function(clientId, channel) {
      return delete this.users_list[channel][clientId + ''];
    };

    MemoryUsersManager.prototype.unsubscribeUser = function(clientId) {
      return delete this.users_list['/meta/subscribe'][clientId + ''];
    };

    MemoryUsersManager.prototype.usersInChannel = function(channel) {
      return this.users_list[channel];
    };

    MemoryUsersManager.prototype.allUsers = function() {
      return this.users_list['/meta/subscribe'];
    };

    return MemoryUsersManager;

  })();

}).call(this);
